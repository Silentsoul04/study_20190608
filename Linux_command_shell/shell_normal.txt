echo要支持同C语言一样的\转义功能，只需要加上参数-e，如下所示：
shell echo打印换行的方法

[~]#echo -e "Hello world.\nHello sea"
Hello world.
Hello sea

grep -n xiaozhan.txt
grep bash$    查找以bash为结尾的行

vi +20 xiaozhan.txt  可以直接跳转到所在行

cat xiaozhan.txt | grep ^# -v 表示过滤掉以#开始的行

grep -v ^$  过滤掉空行

cat xiaozhan.txt | grep ^# -v | grep ^$ -v
也可以这样操作: cat xiaozhan.txt | grep -Ev  '^(#|$)'

实际当中要把文件修改后保存到另外一个文件的方法：
cat xiaozhan.txt | grep -Ev  '^(#|$)' > xiaozhan.tmp; cat xiaozhan.tmp > xiaozhan_2.txt; rm -f xiaozhan.tmp

1. cat test.txt | sed 's/^/#/g' > new.txt --------用#替代每行的开头，即把#加在每行开头

Li xiaozhan@DESKTOP-JFCIJJF ~
$ cat new.txt
#ssss
#aaaaa
#ddddd
#ffffff
#--------------------空行
#cccccc
#vvvvvv

sed -i 就是直接对文本文件进行操作的,会直接修改文件的内容

cat xiaozhan.txt | sed  '21,24 s/beijing/captical/'    不会修改源文件，只是在内存里修改

去掉 “行首” 带“@”的首字母@

sed -i '/^#/d' xiaozhan.txt
删除空行   sed -i '/^$/d' xiaozhan.txt

如果要执行多个sed命令可以用sed -e
sed -e '/^#/d' -e '/^#/d' xiaozhan.txt


sed -i 's/^@//' file

sed -i 's/^#//' file---------去掉python注释的时候用
特定字符串的删除
sed -i '5,6 s/^#//g' sub.py      指定删除第5到第6行的开头的#


sed -i '/字符串/d' file----删除所有符合条件的行

如果是不规则的文件，可以基于关键字来替换,看下面的例子
表示从遇到aaa那行开始，直到遇见ttt那行，把beijing都替换为capital
如果遇到aaa后，下面的行没有遇见ttt，但是遇见beijing，依然替换

cat xiaozhan.txt | sed '/aaa/,/ttt/ s/beijing/capital/'

# 可以把sed规则写在一个文件里  myrule.txt
/^#/d
/^$/d
s/shanghai/finace/i
/aaa/,/ttt/ s/beijing/capital/

然后执行sed -f myrule.txt < xiaozhan_1.txt     不会修改源文件

重定向到另外一个文件 sed -f myrule.txt < xiaozhan_1.txt > test.txt



cat a b c > file -----把文件a,b,c的内容合并到file里，同时也创建了文件file

2.Li xiaozhan@DESKTOP-JFCIJJF ~
$ cat test.txt | sed '/^$/d' > new.txt ------------删除空行，保存新文件到new.txt 

Li xiaozhan@DESKTOP-JFCIJJF ~
$ cat new.txt
ssss
aaaaa
ddddd
ffffff
cccccc
vvvvvv
3. sort -u 能够移除重复的行
  sort | uniq -c    可以统计重复的次数

ps | awk '{print $8}' | sort | uniq -c
      2 /usr/bin/bash
      1 /usr/bin/mintty
      1 /usr/bin/ps
      1 COMMAND

4.Li xiaozhan@DESKTOP-JFCIJJF ~
$ tar -czvf  file.tar.gz  file1  file2 ----tar包，压缩成tar.gz格式


tar -xzvf  file.tar.gz  ---------解压缩tar.gz包


5.$ gunzip  new.tar.gz

Li xiaozhan@DESKTOP-JFCIJJF ~
$ ls
aaa  bbbbb  new.tar  old.txt  rename.txt  test.sh  test.txt
                                                                                                                                                   
6. grep -rI "xiaozhan" ./  (在当前目录递归查找所有包含xiaozhan字样的文本)

7. find . -name "*xiaozhan*“ -print (在当前目录查找包含xiaozhan字样的目录)

搜索最近七天内被访问过的所有文件
find . -type f -atime -7
find . -type d -atime -7 ------搜索目录

find . -type f -size +10k ---搜索大于10K的文件
find . -type d -size +10k-----搜索大于10K的目录

find . -type f -name "*.txt" -delete  -----删除当前目录下所有txt后缀的文件

或者rm -rf $(find . -type f -name "*.txt")
或者find . -type f -name "*.txt" -ok rm {} \;

{} 用于与-exec选项结合使用来匹配所有文件，然后会被替换为相应的文件名，也就是说{}代表着匹配的所有文件名

将30天前的.log文件移动到old目录中
find . -type f -mtime +30 -name "*.log" -exec cp {} old \;

8. vi test.txt
 :set number ----显示行号
 :10 按回车 ---------表示直接跳转到第10行
 
9：vi test.txt
:set number
:10,20y ----表示复制第10到第20行
在需要粘贴的地方输入P，表示粘贴到此处

:10,20s/#/    /g -----用4个空格替换开头的#

:10,20s/^/    /g----在每行行首添加4个空格


二、利用正则表达式删除代码段每行的行号

:%s/^\s*[0-9]*\s*//g

删除多行行尾指定字符串 :%s/#$//g

:%s/^[0-9][0-9]* // 去掉行首的所有数字字符。
:%s/ */ /g 把一个或者多个空格替换为一个空格。
:g/^\s*$/d " 删除只有空白的行


其中，^表示行首，$表示行尾，\s表示空格，[0-9]表示0~9的数字，*表示0或多个，%s/^\s*[0-9]*\s*//gc的意思是将每行以0或多个空格开始中间包含0或多个数字并以0或多个空格结束的字符串替换为空。


10. scp -r a.txt /home/windriver/ ----拷贝文件
    scp -r a.txt windriver@128.224.166.46:/home/windriver/ ---拷贝文件到此目录下面
	scp -r a.txt windriver@128.224.166.46:/home/windriver/a.txt.bak ---拷贝文件到此目录下面，并修改名字

11. ssh windriver@128.224.166.46  ---ssh登陆某台服务器

12. telnet 192.168.195.2 2323 ----telnet登陆某台虚拟机，端口号是2323

13. ftp 128.224.167.168 -----ftp登陆某台服务器

14. ls -l >> log.txt (把ls -l的命令输出结果追加到文件log.txt)  ---相当于ls -l | tee log.txt

15. run command & -----后台操作

./test.sh > res2.log 2>&1 ----标准输出，标准错误  这里&相当于等效于标准输出。 

 ./test.sh 2>&1 | tee  res2.log   ------可以把log打印到屏幕上同时也保存到文件里

# 多条命令放一行执行，中间用分号来隔开即可
# ls -l 2> err.log 
# ls /etc/aa /tc/b &> all.log   保存所有的信息,重定向所有输出
#（ls -al;cat /etc/passwd）| less  组合两条命令的输出

Linux：cut命令详解
1.例如有一个学生报表信息，包含No、Name、Mark、Percent：

复制代码
cat test.txt

No Name Mark Percent
01 tom 69 91
02 jack 71 87
03 alex 68 98

cut -f 2,3 test.txt
结果：
Name Mark
tom 69
jack 71
alex 68
---------------


复制代码
cat test2.txt

No;Name;Mark;Percent
01;tom;69;91
02;jack;71;87
03;alex;68;98

使用 -d 选项指定字段分隔符,默认分隔符是 TAB键，
如果实际文本不是tab键，必须用-d 来指明分隔符，例如空格分隔的话就是用" "
cut  -d ; -f 2 test2.txt
结果：
Name
tom
jack
alex

下面的cut命令可以切分出ip地址
# ifconfig eth0 | grep "inet addr:" | cut -d : -f 2 | cur -d " " -f 1

# 利用windows下安装的git来练习linux shell命令
# 用下面的方法可以编辑一个文本，把里面的多行内容输出到另外一个文件
cat << ENDOFLINE >> xiaozhan.txt
>beijing 100000
>shangahi 20000
>ENDOFLINE       表示结束符
------------------------------------
#  只查看文本的特定行
cat xiaozhan.txt | head      看前10行   或者直接用  head xiaozhan.txt
cat xiaozhan.txt | tail      看后10行               tail xiaozhan.txt
cat xiaozhan.txt | head -n 3  前3行                  head -n 3 xiaozhan.txt
cat xiaozhan.txt | tail -n 3   后3行                 tail -n 3 xiaozhan.txt

===========================================
vi 多窗口编辑命令： vi -o file1 file2

纵向显示多个文件，窗口间切快捷键：ctrl+w（需要按两次w）

保存并退出全部窗口：wqa

退出全部窗口：qa

------------------------------------------------------------------
vim -O file1 file2 横向显示  是大写的字母O

窗口间切快捷键：ctrl+w（需要按两次w）

保存并退出全部窗口：wqa

退出全部窗口：qa
------------------------------------------------------------------
切换到root的身份的命令即为：su -root或是直接 su -
通过命令exit或logout，或者是快捷键Cry+D即可返回原用户身份
for example:
windriver@PEK-QCAO1-D2:~/ANVL/xiaozhan$ su -
Password:
root@PEK-QCAO1-D2:~# exit
logout
windriver@PEK-QCAO1-D2:~/ANVL/xiaozhan$
------------------------------------------------------------------
Linux下环境变量设置的三种方法：

如想将一个路径加入到$PATH中，可以像下面这样做：

1、控制台中设置，不赞成这种方式，因为他只对当前的shell 起作用，换一个shell设置就无效了：

$PATH=$PATH:/NEW_PATH (关闭shell Path会还原为原来的path)

2、修改 /etc/profile 文件，如果你的计算机仅仅作为开发使用时推存使用这种方法，
因为所有用户的shell都有权使用这个环境变量，可能会给系统带来安全性问题。这里是针对所有的用户的，所有的shell

在/etc/profile的最下面添加： export PATH=$PATH:/NEW_PATH

3、修改bashrc文件，这种方法更为安全，它可以把使用这些环境变量的权限控制到用户级别，
这里是针对某一特定的用户，如果你需要给某个用户权限使用这些环境变量，你只需要修改其个人用户主目录下的 .bashrc文件就可以了。
---------------------------------------

linux中如何设置能使一个脚本在任意目录下都可直接运行，不要非到这个脚本所在目录下运行？
方法如下3种:    其实安装python或者tcl等后都是这么做的

1.把这个脚本所在目录加入PATH环境变量中。for instance:
PATH=$PATH:/etc/apache/bin
使用这种方法,只对当前会话有效，也就是说每当登出或注销系统以后，PATH 设置就会失效
for example:
windriver@PEK-QCAO1-D2:~$ echo $PATH
/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games
windriver@PEK-QCAO1-D2:~$ PATH=$PATH:/home/windriver      # add new path
windriver@PEK-QCAO1-D2:~$ echo $PATH
/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/home/windriver
windriver@PEK-QCAO1-D2:~/xiaozhan$ cd pexpect-4.6.0/
windriver@PEK-QCAO1-D2:~/xiaozhan/pexpect-4.6.0$ anyrun.sh
+ echo 'xiaozhan anywhere'
xiaozhan anywhere
windriver@PEK-QCAO1-D2:~/xiaozhan/pexpect-4.6.0$

2.vi /etc/profile
for example
在/etc/profile的最下面添加： PATH=$PATH:/home/windriver

如果修改了/etc/profile，那么编辑结束后执行source profile 或 执行点命令 ./profile, PATH的值就会立即生效了
实测如下：
一个窗口修改/etc/profile，另外一个窗口：
windriver@PEK-QCAO1-D2:~$ cd xiaozhan/
windriver@PEK-QCAO1-D2:~/xiaozhan$ anyrun.sh
+ echo 'xiaozhan anywhere'
xiaozhan anywhere
windriver@PEK-QCAO1-D2:~/xiaozhan$

3.vi ~/.bash_profile
  it should be vi ~/.bashrc    if you are Ubuntu            ----I did not try this method

修改PATH行,把/etc/apache/bin添加进去

这种方法是针对用户起作用的

注意：想改变PATH，必须重新登陆才能生效，以下方法可以简化工作：

如果修改了/etc/profile，那么编辑结束后执行source profile 或 执行点命令 ./profile, PATH的值就会立即生效了。

这个方法的原理就是再执行一次/etc/profile shell脚本，注意如果用sh /etc/profile是不行的，
因为sh是在子shell进程中执行的，即使PATH改变了也不会反应到当前环境中，
但是source是在当前 shell进程中执行的，所以我们能看到PATH的改变。

方法二：
软连接到/bin目录下

2.编译生成可执行文件，my_cmd

3.复制到/bin/目录下

4.创建软连接：

ln -s my_cmd mycmd1

ln -s my_cmd mycmd2

5.在任意目录中，输入my_cmd1，即可打印"hello,world!cmd1."。

实测如下:

windriver@PEK-QCAO1-D2:/bin$ sudo cp /home/windriver/anyrun.sh .

windriver@PEK-QCAO1-D2:/bin$ sudo ln -s anyrun.sh anyrun
windriver@PEK-QCAO1-D2:/bin$

在另外一个窗口：

windriver@PEK-QCAO1-D2:~/xiaozhan$ anyrun
+ echo 'xiaozhan anywhere'
xiaozhan anywhere
windriver@PEK-QCAO1-D2:~/xiaozhan$

++++++++++++++++++++++++++++++++++++++++++++++++++++++++

hostname ----
If you are using CentOS, then you can edit this file to change the hostname:
/etc/sysconfig/network
For my environment:
NETWORKING=yes
NETWORKING_IPV6=yes
HOSTNAME=pek-xli3-d2.wrs.com
NISDOMAIN=swamp

修改了hostname后，如何使其立即生效而不用重启操作系统:
method 1: 使用echo  servername > /proc/sys/kernel/hostname
method 2: sysctl kernel.hostname=servername
method 3: hostname servername

====================================================
Linux系统在向DNS服务器发出域名解析请求之前会查询/etc/hosts文件.if it does not include the hostname,just add it
For my environment:
127.0.0.1   localhost
127.0.0.1   PEK-QCAO1-D2
128.224.160.17 pek-cc-vb01s
128.224.166.46 pek-xli3-d2.wrs.com
# The following lines are desirable for IPv6 capable hosts
::1     ip6-localhost ip6-loopback
fe00::0 ip6-localnet
ff00::0 ip6-mcastprefix
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters
================================================
=======scp or rsync  without password========
场景 A主机往B主机传文件
原文链接：https://blog.csdn.net/u010670151/article/details/86649803

1.A主机下执行 (I did not try this)

ssh-keygen -t rsa
默认回车跳过即可
or ssh-keygen   (input 2 enter)  on this server: pek-vx-system1

note: root用户名字有的机器是wrsadmin
这时会在 /root/.ssh/目录下产生两个文件，id_rsa，id_rsa.pub，注意 .ssh/文件为隐藏目录，直接进入即可?

2.将A中生成的id_rsa.pub文件拷贝到B主机的root用户主目录下的.ssh目录下,并且改名为authorized_keys

[xli3@pek-vx-system1 ~]$ ssh-copy-id -i ~/.ssh/id_rsa.pub wrsadmin@128.224.162.222
or you can use scp -r

for example:
wrsadmin@pek-xsun1-d2:~$ cd .ssh/
wrsadmin@pek-xsun1-d2:~/.ssh$ ll
total 16
drwx------  2 wrsadmin wrsadmin 4096 Aug 19 15:50 ./
drwxr-xr-x 25 wrsadmin wrsadmin 4096 Aug 19 15:35 ../
-rw-------  1 wrsadmin wrsadmin  400 Aug 19 15:50 authorized_keys  ----------this is the new key file,name is auto generated
-rw-r--r--  1 wrsadmin wrsadmin 1554 Jul 11 12:22 known_hosts

这时候用rsync或者scp 命令移动文件不需要输入密码

实际测试如下，在我的环境，从pek-vx-system1往128.224.162.222上拷贝文件

[xli3@pek-vx-system1 default]$ scp -r xlnx-zcu102-rev-1.1.dtb  wrsadmin@128.224.162.222:/tftpboot
xlnx-zcu102-rev-1.1.dtb                                                                    100%   19KB  19.3KB/s   00:00

[xli3@pek-vx-system1 default]$ rsync -r xlnx-zcu102-rev-1.1.dtb  wrsadmin@128.224.162.222:/tftpboot
[xli3@pek-vx-system1 default]$
=============================================================
====rsync     without password
https://www.cnblogs.com/felixzh/p/4950049.html

=================================
chown can modify the group and user

windriver@PEK-QCAO1-D2:~/test_rsync$ ll a.txt
-rw-rw-r-- 1 windriver windriver 0 Aug 20 14:05 a.txt
windriver@PEK-QCAO1-D2:~/test_rsync$ ls -l
total 0
-rw-rw-r-- 1 windriver windriver 0 Aug 20 14:05 a.txt

The first windriver is the user, and the second windriver is the user group.

-----change the user-----
chown可以更改权限用户
实际测试如下:
sudo chown windriver a.txt
windriver@PEK-QCAO1-D2:~/test_rsync$ sudo chown wrsadmin a.txt
windriver@PEK-QCAO1-D2:~/test_rsync$ ls -l
total 0
-rw-rw-r-- 1 wrsadmin windriver 0 Aug 20 14:05 a.txt
windriver@PEK-QCAO1-D2:~/test_rsync$

chgrp可以更改权限组
sudo chgrp wrsadmin a.txt
实际测试如下:
windriver@PEK-QCAO1-D2:~/test_rsync$ sudo chgrp wrsadmin a.txt
windriver@PEK-QCAO1-D2:~/test_rsync$ ls -l
total 0
-rw-rw-r-- 1 wrsadmin wrsadmin 0 Aug 20 14:05 a.txt
windriver@PEK-QCAO1-D2:~/test_rsync$
==================================================
linux里面用来从网络上下载东西的命令
使用wget -O下载并以不同的文件名保存
使用wget -b后台下载
wget --no-check-certificate  -O test.html https://www.centos.bz/2016/10/download-compile-install-nginx/










