Django WEB框架核心思想：

从数据库里取出数据
把数据内容写到模板里面，然后渲染到网页上

install  django-bootstrap4,

右击计算机---属性---高级系统设置---高级--环境变量

选择系统变量，找到path变量，把python的安装目录放进去

如：C:\Python27\;C:\Python27\Scripts;

D:\Python\Scripts----Django-admin命令就在这个目录下

进入到C盘任意目录，如果能运行django-admin startproject beijing 就表示环境变量没问题

不过建议以后运行Django命令还是进入到相应的工程目录下面

python3 manage.py runserver---start django 后端
python3 manage.py startapp mblog -----创建应用
view.py里面定义函数来修改html，函数返回render()来修改html
在view.py里面就是获取数据库的数据，形成字典形式，然后通过render（）函数修改html模板

models.py用来和数据库交互，定义了数据库的表的字段(如果是用的MySQL，需要提前建立一个数据库，sqlite3不需要)，表的名字都是自动定义

url.py设置url信息，即路由信息,和view.py里面的函数相关联起来

setting.py设置一些固定参数，例如模板路径，数据库，app名字
static目录下面放js文件，css脚本，然后在setting.py里面设置好路径

js脚本是浏览器调用的，也就是加载后才渲染页面
===============注意一下顺序
创建完新的应用后，再修改models.py，然后再修改admin.py,再修改setting.py(MySQL要实际创建一个数据库)，再迁移同步数据库
pycharm直接安装django-bootstrap4,然后在setting.py里面加入这个应用

python manage.py makemigrations 和 python manage.py migrate  (再查看数据库，已经生成新的表)

# 学习链接：Python高级编程技巧
https://www.cnblogs.com/valorchang/p/11434615.html

# https://www.cnblogs.com/wcwnina/p/8627189.html    Django Admin后台管理用户密码修改
----------
方法一
在Terminal中执行：python manage.py changepassword your_name（其中“your_name”为你要修改密码的用户名），根据提示内容修改即可。

方法二
进入shell环境，执行：

from django.contrib.auth.models import User
u = User.objects.get(username='your_name')
u.set_password('new_password')
u.save()
------------

# 如果用的sqlite3数据库，在pycharm上默认不需要任何设置，只有查看里面数据的时候才需要下载driver，参考截图
# 在学习Django架站第四章，在使用源代码的时候提示没有admin用户
# 自己创建一个admin用户即可,在pycharm的terminal窗口：密码是test123456
D:\xiaozhan_git\study_20190608\DjangoCodes - Python新手学Django架站的16堂课 第2版\ch04\mynewsite>python3 manage.py createsuperuser
Username (leave blank to use 'administrator'): admin
Email address: lxz_20081025@163.com
然后就能进入http://127.0.0.1:8000/admin/
然后在Products里面就能够自由增加数据，同时也会自动增加到sqlite3数据库，在pycharm里面同步查看数据
===================== models.ForeignKey 的个人理解,后续慢慢深入理解
foreignkey是一种关联字段，将两张表进行关联的方式

class Lesson(models.Model): # Lesson这张表要用到表Course里面的内容，关联如下
    course = models.ForeignKey(Course, verbose_name='课程', on_delete=models.CASCADE)

class Video(models.Model):  # 在这张表里要用到表Lesson的内容，所以下面进行关联,规则:设置变量为小写的表名,第一个参数为表名
    lesson = models.ForeignKey(Lesson, verbose_name='章节', on_delete=models.CASCADE)

==============================================================
python3 -m pip install --upgrade pip
家里电脑由于是Django2.2版本，所以需要修改数据库里面的配置，
========AttributeError: 'str' object has no attribute 'decode'
D:\Python\lib\site-packages\django\db\backends\mysql\operations.py
query = query.encode(errors='replace')

解决方法：把decode改为encode即可
===========================================================

说明：

如果是get请求，直接返回注册页面给用户
如果是post请求，先生成一个表单实例，并获取用户提交的所有信息（request.POST）
is_valid()方法，验证用户的提交信息是不是合法
如果合法，获取用户提交的email和password
实例化一个user_profile对象，把用户添加到数据库
默认添加的用户是激活状态（is_active=1表示True），在这里我们修改默认的状态（改为is_active = False），只有用户去邮箱激活之后才改为True
对密码加密，然后保存，发送邮箱，username是用户注册的邮箱，‘register’表明是注册
注册成功跳转到登录界面

============================================================================





